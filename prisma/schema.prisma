// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  firstName    String
  lastName     String
  password     String
  salt         String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  categories   Category[]
}

model Transaction {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  amount      Float
  purchasedAt DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  budget       Int
  color        String        @default("blue")
  disabled     Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userId       Int
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@unique([name, userId]) // Don't allow duplicate names per user
}
